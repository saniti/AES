<button class="hamburger-menu" id="hamburgerMenu" aria-label="Toggle menu">
  <span></span>
  <span></span>
  <span></span>
</button>

<nav class="sidebar" id="sidebar">
  <div class="sidebar-header">
    <div class="logo-container" style="text-align: center; padding: 10px; margin-bottom: 10px;">
      <img src="/AES.svg" alt="Alerte Equine Science" style="max-width: 120px; height: auto;" />
    </div>
    <div class="stable-selector">
      <select id="stableSelect" class="stable-dropdown">
        <option value="">Loading stables...</option>
      </select>
    </div>
  </div>

  <div class="user-info">
    <div class="user-avatar">
      <%= user.name.charAt(0).toUpperCase() %>
    </div>
    <div class="user-details">
      <div class="user-name"><%= user.name %></div>
      <div class="user-email"><%= user.email %></div>
      <% if (user.role) { %>
        <div class="user-role"><%= user.role %></div>
      <% } %>
    </div>
  </div>

  <div class="nav-menu">
    <a href="/dashboard" class="nav-item">
      <span class="nav-icon"><i class="fas fa-chart-line"></i></span>
      <span class="nav-text">Dashboard</span>
    </a>
    <a href="/horses" class="nav-item">
      <span class="nav-icon"><i class="fas fa-horse"></i></span>
      <span class="nav-text">Horses</span>
    </a>
    <a href="/sessions" class="nav-item">
      <span class="nav-icon"><i class="fas fa-running"></i></span>
      <span class="nav-text">Sessions</span>
    </a>
    <a href="#" class="nav-item">
      <span class="nav-icon"><i class="fas fa-heartbeat"></i></span>
      <span class="nav-text">Injuries</span>
    </a>
    <a href="#" class="nav-item">
      <span class="nav-icon"><i class="fas fa-file-alt"></i></span>
      <span class="nav-text">Documents</span>
    </a>
    <a href="#" class="nav-item">
      <span class="nav-icon"><i class="fas fa-users"></i></span>
      <span class="nav-text">Users</span>
    </a>
  </div>

  <div class="sidebar-footer">
    <div class="theme-selector">
      <label for="localeSelect" style="font-size: 12px; color: rgba(255,255,255,0.7); margin-bottom: 5px; display: block;">Language & Region</label>
      <select id="localeSelect" class="theme-dropdown">
        <option value="en-AU">English (Australian)</option>
        <option value="en-US">English (US)</option>
        <option value="es-ES">Espa√±ol</option>
      </select>
    </div>
    <div class="theme-selector">
      <label for="themeSelect" style="font-size: 12px; color: rgba(255,255,255,0.7); margin-bottom: 5px; display: block;">Theme</label>
      <select id="themeSelect" class="theme-dropdown">
        <option value="default">Default Blue</option>
        <option value="dark">Dark Mode</option>
        <option value="ocean">Ocean</option>
        <option value="forest">Forest</option>
        <option value="sunset">Sunset</option>
        <option value="purple">Purple</option>
      </select>
    </div>
    <a href="/logout" class="nav-item logout">
      <span class="nav-icon"><i class="fas fa-sign-out-alt"></i></span>
      <span class="nav-text" data-i18n="logout">Logout</span>
    </a>
  </div>
</nav>

<script src="/js/locale.js"></script>
<script>
// Hamburger menu toggle
document.addEventListener('DOMContentLoaded', () => {
  const hamburger = document.getElementById('hamburgerMenu');
  const sidebar = document.getElementById('sidebar');
  
  if (hamburger && sidebar) {
    hamburger.addEventListener('click', (e) => {
      e.stopPropagation();
      sidebar.classList.toggle('collapsed');
      hamburger.classList.toggle('active');
      document.body.classList.toggle('sidebar-collapsed');
      
      // Save state
      localStorage.setItem('sidebarCollapsed', sidebar.classList.contains('collapsed'));
    });
    
    // Restore saved state
    const savedCollapsed = localStorage.getItem('sidebarCollapsed') === 'true';
    if (savedCollapsed) {
      sidebar.classList.add('collapsed');
      hamburger.classList.add('active');
      document.body.classList.add('sidebar-collapsed');
    }
    
    // Close sidebar when clicking outside on mobile
    document.addEventListener('click', (e) => {
      if (window.innerWidth <= 768) {
        if (!sidebar.contains(e.target) && !hamburger.contains(e.target)) {
          if (sidebar.classList.contains('collapsed')) {
            sidebar.classList.remove('collapsed');
            hamburger.classList.remove('active');
            document.body.classList.remove('sidebar-collapsed');
          }
        }
      }
    });
  }
});

// Load stables on page load
document.addEventListener('DOMContentLoaded', async () => {
  const stableSelect = document.getElementById('stableSelect');
  
  try {
    const response = await fetch('/api/user/stables');
    const stables = await response.json();
    
    stableSelect.innerHTML = '';
    
    if (stables.length === 0) {
      stableSelect.innerHTML = '<option value="">No stables available</option>';
    } else {
      stables.forEach(stable => {
        const option = document.createElement('option');
        option.value = stable.id;
        option.textContent = stable.name;
        stableSelect.appendChild(option);
      });
      
      // Load saved selection or select first
      const savedStable = localStorage.getItem('selectedStable');
      if (savedStable) {
        stableSelect.value = savedStable;
      }
    }
  } catch (error) {
    console.error('Failed to load stables:', error);
    stableSelect.innerHTML = '<option value="">Error loading stables</option>';
  }
  
  // Save selection
  stableSelect.addEventListener('change', () => {
    localStorage.setItem('selectedStable', stableSelect.value);
    // Trigger event for other components
    window.dispatchEvent(new CustomEvent('stableChanged', { 
      detail: { stableId: stableSelect.value } 
    }));
  });
  
  // Theme selector
  const themeSelect = document.getElementById('themeSelect');
  const savedTheme = localStorage.getItem('theme') || 'default';
  document.documentElement.setAttribute('data-theme', savedTheme);
  themeSelect.value = savedTheme;
  
  themeSelect.addEventListener('change', () => {
    const theme = themeSelect.value;
    document.documentElement.setAttribute('data-theme', theme);
    localStorage.setItem('theme', theme);
  });
  
  // Locale selector
  const localeSelect = document.getElementById('localeSelect');
  const savedLocale = localStorage.getItem('locale') || 'en-AU';
  localeSelect.value = savedLocale;
  
  localeSelect.addEventListener('change', () => {
    const locale = localeSelect.value;
    localStorage.setItem('locale', locale);
    // Reload page to apply locale changes
    window.location.reload();
  });
});
</script>
<script src="/js/nav.js"></script>
